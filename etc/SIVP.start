//
// -------------------------------------------------------------------------
// SIVP - Scilab Image Processing toolbox
// Copyright (C) 2005-2010  Shiqi Yu
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
// -------------------------------------------------------------------------
//

TOOLBOX_NAME  = "SIVP";
TOOLBOX_TITLE = "SIVP - Scilab Image and Video Processing Toolbox";

mprintf("Start " + TOOLBOX_TITLE + "\n");

if isdef("sivplib") then
  warning(TOOLBOX_NAME + " library is already loaded");
  return;
end

etc_tlbx  = get_absolute_file_path("SIVP.start");
etc_tlbx  = getshortpathname(etc_tlbx);
root_tlbx = strncpy( etc_tlbx, length(etc_tlbx)-length("\etc\") );

//Load  functions library
// =============================================================================
mprintf("\tLoad macros\n");
pathmacros = pathconvert( root_tlbx ) + "macros" + filesep();
sivplib = lib(pathmacros);
clear pathmacros;

// load gateways
// =============================================================================
mprintf("\tLoad gateways\n");
ilib_verbose(0);
// load dependencies on OpenCV 2.1.0
if getos() == 'Windows' then
  if win64() then
    opencvDllPath = root_tlbx + '\thirdparty\opencv\windows\x64\';
  else
    opencvDllPath = root_tlbx + '\thirdparty\opencv\windows\x86\';
  end
  link(opencvDllPath + 'cxcore210' + getdynlibext());
  link(opencvDllPath + 'ml210' + getdynlibext());
  link(opencvDllPath + 'highgui210' + getdynlibext());
  link(opencvDllPath + 'cxts210' + getdynlibext());
  link(opencvDllPath + 'cv210' + getdynlibext());
  link(opencvDllPath + 'cvaux210' + getdynlibext());
end
exec(pathconvert(root_tlbx+"/sci_gateway/loader_gateway.sce",%f));

// Load and add help chapter
// =============================================================================
if or(getscilabmode() == ["NW";"STD"]) then
  mprintf("\tLoad help\n");
  path_addchapter = pathconvert(root_tlbx+"/jar");
  if ( isdir(path_addchapter) <> [] ) then
    add_help_chapter(TOOLBOX_TITLE, path_addchapter, %F);
    clear add_help_chapter;
  end
  clear path_addchapter;
end

// Load demos
// =============================================================================
if or(getscilabmode() == ["NW";"STD"]) then
  mprintf("\tLoad demos\n");
  pathdemos = pathconvert(root_tlbx+"/demos/sivp.dem.gateway.sce",%F,%T);
  add_demo("SIVP",pathdemos);
  clear pathdemos add_demo;
end

sivp_init(root_tlbx);

clear root_tlbx;
clear etc_tlbx;
