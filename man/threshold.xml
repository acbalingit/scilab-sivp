<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "mansivp.dtd">
<MAN>
<LANGUAGE>eng</LANGUAGE>
<TITLE>threshold</TITLE>
<TYPE>SIVP Toolbox</TYPE>
<DATE>July, 2005</DATE>
<SHORT_DESCRIPTION name="threshold">Applies fixed-level threshold to array elements</SHORT_DESCRIPTION>
<CALLING_SEQUENCE>
   <CALLING_SEQUENCE_ITEM>ima_out = threshold(ima_in,"Calling sequence",param1,param2)</CALLING_SEQUENCE_ITEM>
</CALLING_SEQUENCE>
<PARAM>
<PARAM_INDENT>
   <PARAM_ITEM>
   <PARAM_NAME>ima_in</PARAM_NAME>
   <PARAM_DESCRIPTION>
   Input matrice.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>ima_out</PARAM_NAME>
   <PARAM_DESCRIPTION>
   Output matrice. Image to store the edges found by the function.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>calling sequence</PARAM_NAME>
   <PARAM_DESCRIPTION>
   Type of thresehold :
   
   Thresholding type (see the discussion)
   
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>Param1</PARAM_NAME>
   <PARAM_DESCRIPTION>
   Threshold value.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
   <PARAM_NAME>Param2</PARAM_NAME>
   <PARAM_DESCRIPTION>
   Maximum value to use with THRESH_BINARY, THRESH_BINARY_INV, and THRESH_TRUNC thresholding types.
   </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   </PARAM_INDENT>
</PARAM>
<DESCRIPTION>
<P>
   <TT>threshold</TT> The function cvThreshold applies fixed-level thresholding to single-channel array. The function is typically used to get bi-level (binary) image out of grayscale image or for removing a noise, i.e. filtering out pixels with too small or too large values. There are several types of thresholding the function supports that are determined by thresholdType:
</P>
<P>
thresholdType=THRESH_BINARY:
dst(x,y) = maxValue, if src(x,y)>threshold
           0, otherwise
</P>
<P>
thresholdType=THRESH_BINARY_INV:
dst(x,y) = 0, if src(x,y)>threshold
           maxValue, otherwise
</P>
<P>
thresholdType=THRESH_TRUNC:
dst(x,y) = threshold, if src(x,y)>threshold
           src(x,y), otherwise
</P>
<P>
thresholdType=THRESH_TOZERO:
dst(x,y) = src(x,y), if (x,y)>threshold
           0, otherwise
</P>
<P>
thresholdType=THRESH_TOZERO_INV:
dst(x,y) = 0, if src(x,y)>threshold
           src(x,y), otherwise
</P>

</DESCRIPTION>
<EXAMPLE><![CDATA[

//upgrade the size of the memory
stacksize(10000000); 

//load the picture
A=imread('/home/vincent/software/sivp/images/maison.jpg');

B=convert(A,'BGR2GRAY');

//call the rect SIVP function
C=threshold(B,'THRESH_BINARY',90,150);
//C=threshold(B,'THRESH_BINARY_INV',90,150);
//C=threshold(B,'THRESH_TRUNC',90,150);
//C=threshold(B,'THRESH_TOZERO',90,150);
//C=threshold(B,'THRESH_TOZERO_INV',90,150);

//conversion
C=double(C)/255;

//try to display the result
xbasc();
imshow(C);

]]></EXAMPLE>
<!-- ================================= -->

<AUTHORS>
   <AUTHORS_ITEM name="ETIENNE"> ETIENNE Vincent &lt;vincent.etienne (AT) gmail DOT com &gt; </AUTHORS_ITEM>
</AUTHORS>
<!-- ================================= -->
<SECTION label="Bugs and Shortcomings">
<P>
</P>
</SECTION>
<!-- ================================= -->
<SECTION label="Availability">
The latest version of SIVP can be found at
<P><A href="http://sivp.sourceforge.net">http://sivp.sourceforge.net</A></P>
</SECTION>
<!-- ================================= -->
   <SEE_ALSO>
      <SEE_ALSO_ITEM> <LINK>imsmooth</LINK> </SEE_ALSO_ITEM>
      <SEE_ALSO_ITEM> <LINK></LINK> </SEE_ALSO_ITEM>
   </SEE_ALSO>
</MAN>
