<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE MAN SYSTEM "mansivp.dtd">
<MAN>
<LANGUAGE>eng</LANGUAGE>
<TITLE>imnoise</TITLE>
<TYPE>SIVP Toolbox</TYPE>
<DATE>July, 2006</DATE>
<SHORT_DESCRIPTION name="imnoise">Add noise (gaussian, etc.) to an image</SHORT_DESCRIPTION>
<CALLING_SEQUENCE>
   <CALLING_SEQUENCE_ITEM>imn = imnoise(im, type [,parameters])</CALLING_SEQUENCE_ITEM>
</CALLING_SEQUENCE>
<PARAM>
<PARAM_INDENT>
   <PARAM_ITEM>
     <PARAM_NAME>im</PARAM_NAME>
     <PARAM_DESCRIPTION>
       Input image.
     </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
     <PARAM_NAME>type</PARAM_NAME>
     <PARAM_DESCRIPTION>
       String having one of these values:
       <PARAM_INDENT>
	 <PARAM_ITEM>
	   <PARAM_NAME>'salt &amp; pepper'</PARAM_NAME>
	   <PARAM_DESCRIPTION>
	     drop-out/On-off noise
	   </PARAM_DESCRIPTION>
	 </PARAM_ITEM>
	 <PARAM_ITEM>
	   <PARAM_NAME>'speckle'</PARAM_NAME>
	   <PARAM_DESCRIPTION>
	     multiplicative noise
	   </PARAM_DESCRIPTION>
	 </PARAM_ITEM>
	 <PARAM_ITEM>
	   <PARAM_NAME>'gaussian'</PARAM_NAME>
	   <PARAM_DESCRIPTION>
	     Gaussian white/additive noise
	   </PARAM_DESCRIPTION>
	 </PARAM_ITEM>
	 <PARAM_ITEM>
           <PARAM_NAME>'localvar'</PARAM_NAME>
           <PARAM_DESCRIPTION>
             Pixel-specific  variance  (Zero-mean Gaussian)
           </PARAM_DESCRIPTION>
	 </PARAM_ITEM>
	 <PARAM_ITEM>
           <PARAM_NAME>'poisson'</PARAM_NAME>
           <PARAM_DESCRIPTION>
             Not yet implemented
           </PARAM_DESCRIPTION>
	 </PARAM_ITEM>
       </PARAM_INDENT>

     </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
     <PARAM_NAME>parameters</PARAM_NAME>
     <PARAM_DESCRIPTION>
       A sequence of parameters to control the noise distribution, depending on the chosen type. If omitted, default values are used (see below).
     </PARAM_DESCRIPTION>
   </PARAM_ITEM>
   <PARAM_ITEM>
     <PARAM_NAME>imn</PARAM_NAME>
     <PARAM_DESCRIPTION>
       Noisy image, which has the same size and type as input image <TT>im</TT>.
     </PARAM_DESCRIPTION>
   </PARAM_ITEM>
</PARAM_INDENT>
</PARAM>

<DESCRIPTION>
   <P>
<TT>imnoise(im, type [, parameters])</TT> adds a type of noise 
to the intensity image <TT>im</TT>. 
Optionally, you can control the noise parameters starting at the 3rd. Argument to imnoise. 
Here are  example of noise types and their parameterss: </P>

   <P>
<TT>imn = imnoise(im,&apos;salt &amp; pepper&apos;,d)</TT> adds drop-out noise, 
where <TT>d</TT> is the noise density (probability of swapping a  pixel). (default: d=0.05). </P>

   <P>
<TT>imn = imnoise(im,&apos;gaussian&apos;,m,v)</TT> adds Gaussian additive noise  of mean m and variance v. (default: m=0 and v=0.01) </P>

   <P>
<TT>im = imnoise(im,&apos;localvar&apos;,V)</TT> additive zero-mean Gaussian 
noise where the variance at im(i,j) is V(i,j). </P>

   <P>
<TT>imn = imnoise(im,&apos;localvar&apos;, intensity, V)</TT> 
additive zero-mean Gaussian noise,
and the local variance of the noise, var, 
is a function of the image intensity values in <TT>im</TT>. 
The variance is <TT>matrix( interp1(intensity(:),V(:),im(:)), size(im) )</TT></P>

   <P>
<TT>imn = imnoise(im,&apos;speckle&apos;,v)</TT> adds multiplicative noise, 
using <TT>imn = im + noise*im</TT>, 
where noise is uniformly distributed  with mean 0 and variance v. (default: v=0.04) </P>

   <P>
By default, we consider that  "1" corresponds to the maximum intensity value of the image,
and "0" to minimum.
If the input image <TT>im</TT> is an integer image, 
it will be converted to double using <TT>im2double</TT> function first.
Before return the result, the image will be converted to the same type as the input image.
The elements in the output matrix <TT>imn</TT> 
that exceed the range of the integer or double type will be truncated. 
</P>

<P>
  Supported classes: INT8, UINT8, INT16, UINT16, INT32, DOUBLE.
</P>
</DESCRIPTION>

<!-- ================================= -->
<EXAMPLE><![CDATA[

    im = imread('lena.png');

    imn = imnoise(im, 'gaussian');
    imshow(imn);

    imn = imnoise(im, 'salt & pepper');
    imshow(imn);

    imn = imnoise(im(:,:,1), 'salt & pepper', 0.2);
    imshow(imn);

    lowtri = tril(ones(im(:,:,1)));
    imn = imnoise( im(:,:,1), 'localvar', lowtri/5);
    imshow(imn);

    imn = imnoise( im(:,:,1), 'localvar', [0:0.1:1], [0:0.1:1].^3);
    imshow(imn);

    imn = imnoise(im, 'speckle' );
    imshow(imn);

]]></EXAMPLE>

<!-- ================================= -->
<SECTION label="Bugs and Shortcomings">
<P>
&apos;poisson&apos; noise is not yet implemented.
</P>
</SECTION>

<!-- ================================= -->
<AUTHORS>
   <AUTHORS_ITEM name="Shiqi"> Shiqi Yu &lt;shiqi.yu[at]gmail.com&gt; </AUTHORS_ITEM>
   <AUTHORS_ITEM name="Ricardo"> Ricardo Fabbri &lt;ricardofabbri [at] users.sf.net&gt; </AUTHORS_ITEM>
</AUTHORS>
<!-- ================================= -->
<SECTION label="Availability">
The latest version of SIVP can be found at
<P><A href="http://sivp.sourceforge.net">http://sivp.sourceforge.net</A></P>
</SECTION>
<!-- ================================= -->
   <SEE_ALSO>
   </SEE_ALSO>
</MAN>
