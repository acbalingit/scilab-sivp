<?xml version="1.0" encoding="ISO-8859-1"?>
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:db="http://docbook.org/ns/docbook" version="5.0-subset Scilab" xml:lang="en" xml:id="camshift"><info><pubdate>September, 2008</pubdate></info><refnamediv><refname>camshift</refname><refpurpose>Track an object by color. It gets the object position, size and orientation.</refpurpose></refnamediv>





<refsynopsisdiv><title>Calling Sequence</title><synopsis>obj_win = camshift(im, init_win)
obj_win = camshift(im)</synopsis></refsynopsisdiv>
<refsection><title>Parameters</title>
<variablelist>
   <varlistentry>
   <term>im</term>
   <listitem>
   Input image which must be a 3-channel image.
   </listitem>
   </varlistentry>
   <varlistentry>
   <term>init_win</term>
   <listitem>
   Initial search window which is a 1x4 matrix [x,y,w,h].
   <literal>x</literal> is the x-coordinate of the left-top window corner.
   <literal>y</literal> is the y-coordinate of the left-top window corner.
   <literal>w</literal> is the width of the window.
   <literal>h</literal> is the height of the window.
   </listitem>
   </varlistentry>
   <varlistentry>
   <term>obj_win</term>
   <listitem>
   Object window which is a 1x5 matrix [x,y,w,h,theta].
   <literal>x</literal> is the x-coordinate of the left-top window corner.
   <literal>y</literal> is the y-coordinate of the left-top window corner.
   <literal>w</literal> is the width of the window.
   <literal>h</literal> is the height of the window.
   </listitem>
   </varlistentry>    
</variablelist>
</refsection>
<refsection><title>Description</title>
<para>
   The function implements CAMSHIFT object tracking algorithm. When using it, please first use <literal>obj_win=camshift(im, init_win)</literal> to initialize the tracker, then use <literal>obj_win=camshift(im)</literal> to track the object.    
</para>
</refsection>

<refsection><title>Examples</title><programlisting role="example"><![CDATA[
	
    n = aviopen(SCI+'/contrib/sivp-svn-trunk/images/red_car_video.avi');
    im = avireadframe(n); //get a frame
    obj_win = camshift(im, [12, 6, 39, 13]); //initialize tracker

    while ~isempty(im),
          obj_win = camshift(im); //camshift tracking          
          
          im = rectangle(im, obj_win, [0,255,0]);
          imshow(im);

          im = avireadframe(n);
    end;

    aviclose(n);

]]></programlisting></refsection>


<refsection><title>Authors</title><simplelist type="vert">
   <member> Jia Wu &lt;jiawu83[at]gmail.com&gt; </member>
   <member> Shiqi Yu &lt;shiqi.yu[at]gmail.com&gt; </member>   
</simplelist></refsection>


<refsection><title>Bibliography</title>
 <para>
    "Computer vision face tracking as a component of a perceptual user interface", G.R. Bradski, in Workshop on Applications of Computer Vision, pages 214, Princeton, NJ, Oct. 1998. 
 </para>
</refsection>


<refsection><title>Availability</title>
The latest version of SIVP can be found at
<para>http://sivp.sf.net </para>
</refsection>


<refsection><title>See Also</title><simplelist type="inline">
   <member><link linkend="meanshift">meanshift</link></member>
</simplelist></refsection>
</refentry>
